import random

class Psychology:
    def __init__(self):
        # F√∂r att spara po√§ng och antal fr√•gor
        self.score = 0
        self.total_questions = 0

        # Lista med fr√•gor, svarsalternativ och r√§tt svar
        self.questions = [
            {"question": "Hur menade Piaget att moral utvecklas hos barn?",
             "options": [
                 "A) Genom imitering av vuxnas beteenden",
                 "B) Genom genetiska faktorer",
                 "C) Genom religi√∂s undervisning",
                 "D) Genom interaktion och samspel med andra s√• som lek"
             ],
             "answer": "D"},

            {"question": "N√§r man f√∂rs√∂ker sluta med missbruk av alkohol eller porr √§r ett vanligt abstinenssymptom att man k√§nner vad√•?",
             "options": ["A) S√∂tsug", "B) Rastl√∂shet", "C) Huvudv√§rk", "D) √Öngest"],
             "answer": "D"},

            {"question": "Vilken behandling har b√§st bevisat st√∂d mot oro och √§ltande tankar?",
             "options": ["A) Samtalsterapi", "B) KBT", "C) Hypnos", "D) Psykedeliska droger"],
             "answer": "B"},

            {"question": "Varf√∂r aktiveras amygdalan vid en muntlig presentation inf√∂r andra?",
             "options": ["A) Den tolkar situationen som ett hot", "B) Den styr aptiten och g√∂r en hungrig",
                         "C) Den triggar nostalgiska minnen", "D) Den aktiverar kreativt t√§nkande"],
             "answer": "A"},

            {"question": "Vilka delar av m√§nniskan menade Freud att samh√§llet f√∂rtrycker?",
             "options": ["A) Hungerk√§nslor", "B) Sj√§lvbilder", "C) Sexualitet och aggressivitet", "D) Dr√∂mmar"],
             "answer": "C"},

            {"question": "Varf√∂r √§r slotmaskiner s√§rskilt beroendeframkallande?",
             "options": ["A) Las Vegas har funnits i √∂ver 100 √•r", "B) De anv√§nder h√∂gre insatser √§n andra spel",
                         "C) N√§r man trycker p√• knappen frig√∂rs automatiskt dopamin",
                         "D) Maskinen ger bel√∂ningar utifr√•n slumpm√§ssiga intervaller"],
             "answer": "D"},

            {"question": "Vad beskriver begreppet kognitiv dissonans?",
             "options": ["A) Konflikt mellan tankar och handlingar", "B) Att inte kunna tolka sensorisk information",
                         "C) Att gl√∂mma minnen efter trauma", "D) Konflikt mellan olika k√§nslor samtidigt"],
             "answer": "A"},

            {"question": "Vilken strategi fungerar b√§st enligt inl√§rningspsykologi f√∂r att f√• barn att uppr√§tth√•lla st√§dning av sitt rum?",
             "options": ["A) Bel√∂na med veckopeng n√§r de st√§dar", "B) Bestraffa med uteg√•ngsf√∂rbud om de inte st√§dar",
                         "C) Att d√• och d√• ge uppskattning f√∂r att barnet st√§dade",
                         "D) St√§da rummet sj√§lv och hoppas barnet hj√§lper"],
             "answer": "C"},

            {"question": "I vilket land v√§xer m√•nga barn upp med undvikande anknytningsstrategi?",
             "options": ["A) Japan", "B) Israel", "C) Tyskland", "D) USA"],
             "answer": "C"},

            {"question": "Vem populariserade psykologiska f√∂rsvarsmekanismer som projicering och borttr√§ngning?",
             "options": ["A) Anna Freud", "B) Astrid Lindgren", "C) Jonas Gardell", "D) Carl Rogers"],
             "answer": "A"}
        ]

    def get_random_question(self):
        # F√∂r att h√§mta en slumpm√§ssig fr√•ga ur listan
        index = random.randint(0, len(self.questions) - 1)
        question = self.questions[index]
        return question

    def check_answer(self, question, user_answer):
        # F√∂r att kontrollera om anv√§ndarens svar st√§mmer med r√§tt svar
        if user_answer.strip().upper() == question["answer"].upper():
            return True
        else:
            return False

    def print_all_questions(self):
        # Skriva ut alla fr√•gorna
        for q in self.questions:
            print(q["question"])


# F√ñr att testk√∂ra koden
if __name__ == "__main__":
    quiz = Psychology()
    random_question = quiz.get_random_question()

    print("üß† Fr√•ga:", random_question["question"])
    for option in random_question["options"]:
        print(option)

    user_input = input("Skriv ditt svar (A-D): ").upper()

    if quiz.check_answer(random_question, user_input):
        print("‚úÖ R√§tt svar!")
    else:
        print(f"‚ùå Fel svar. R√§tt svar var {random_question['answer']}.")
